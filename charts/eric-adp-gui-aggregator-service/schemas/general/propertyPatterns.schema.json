{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "urn:adp:helm:schemas:v1:gas-propertyPatterns:v1",
  "allOf": [false],
  "$defs": {
    "emptyFragment": {
      "$id": "urn:adp:helm:schemas:v1:gas-conditionalFragments:v1/emptyFragment",
      "$comment": "This fragment is intended for the case when no changes to the existing schema are required if a certain condition is met."
    },
    "hostname": {
      "$id": "urn:adp:helm:schemas:v1:gas-propertyPatterns:v1/hostname",
      "type": "string",
      "minLength": 1,
      "maxLength": 253,
      "$comment": "This is a string that must be a valid hostname. This regex has been checked and confirmed not vulnerable to ReDoS attacks.",
      "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*$",
      "examples": ["localhost", "local.site.ericsson.com"]
    },
    "hostnameWithPort": {
      "$id": "urn:adp:helm:schemas:v1:gas-propertyPatterns:v1/hostnameWithPort",
      "type": "string",
      "minLength": 1,
      "maxLength": 259,
      "$comment": "This is a string that must be a valid hostname with a port. The Port is optional.",
      "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?)*((:6553[0-5])|(:655[0-2][0-9])|(:65[0-4][0-9]{2})|(:6[0-4][0-9]{3})|(:[1-5][0-9]{4})|(:[0-5]{0,5})|(:[0-9]{1,4}))?$",
      "examples": ["local.site.ericsson.com", "local.site.ericsson.com:3007"]
    },
    "serviceName": {
      "$id": "urn:adp:helm:schemas:v1:gas-propertyPatterns:v1/serviceName",
      "$comment": "This is a string that must be a valid service name.",
      "type": "string",
      "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])*$",
      "examples": ["adp-gui-aggregator"]
    },
    "port": {
      "$id": "urn:adp:helm:schemas:v1:gas-propertyPatterns:v1/port",
      "type": "number",
      "minimum": 1,
      "maximum": 65535,
      "examples": [8080, 3031]
    },
    "time": {
      "$id": "urn:adp:helm:schemas:v1:gas-propertyPatterns:v1/time",
      "$comment": "This is a string that must be a valid time value. Currently using for timeoutPolicy properties",
      "type": "string",
      "pattern": "^(infinity|[0-9]+(ns|us|Âµs|ms|s|m|h))$",
      "examples": ["infinity", "300ms", "1.5h"]
    },
    "memory": {
      "$id": "urn:adp:helm:schemas:v1:gas-propertyPatterns:v1/memory",
      "$comment": "This regular expression has been taken from Kubernetes requirements.",
      "type": ["null", "integer", "string"],
      "pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
      "examples": [128974848, "129e6", "129M", "123Mi"]
    },
    "logLevel": {
      "$id": "urn:adp:helm:schemas:v1:gas-propertyPatterns:v1/logLevel",
      "$comment": "This value must contain one of the currently supported logging levels.",
      "type": "string",
      "enum": ["critical", "error", "warning", "info", "debug"]
    },
    "protocol": {
      "$id": "urn:adp:helm:schemas:v1:gas-propertyPatterns:v1/protocol",
      "type": "string",
      "enum": ["http", "https"]
    },
    "facility": {
      "$id": "urn:adp:helm:schemas:v1:gas-propertyPatterns:v1/facility",
      "type": "string",
      "$comment": "Facility for direct log collector",
      "enum": [
        "kern",
        "user",
        "mail",
        "daemon",
        "auth",
        "syslog",
        "lpr",
        "news",
        "uucp",
        "clock",
        "sec",
        "ftp",
        "ntp",
        "audit",
        "alert",
        "clock2",
        "local0",
        "local1",
        "local2",
        "local3",
        "local4",
        "local5",
        "local6",
        "local7"
      ],
      "examples": ["local0"]
    }
  }
}
